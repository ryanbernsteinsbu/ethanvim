return {
  'goolord/alpha-nvim',
  config = function()
    local alpha = require("alpha")
    local dashboard = require("alpha.themes.dashboard")

    local frames = {  
		{
			"  █████▄▄▄█████  ██  ██  ▄▄▄       ███▄    █ ",
			"  █   ▀   ██     ██  ██  ████▄     ██ ▀█   █ ",
			"  ███     ██     ██▀▀██  ██  ▀█▄   ██  ▀█ ██ ",
			"   █  ▄   ██      █  ██  ██▄▄▄▄██  ██   ▐▌██ ",
			"   ████   ██      █  ██   █    ██  ██     ██ ",
			"                                █           ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			"  █████▄▄▄█████  ██  ██  ▄▄▄       ███▄    █ ",
			"  █   ▀   ██  ░  ██  ██ ░████▄     ██ ▀█   █ ",
			"  ███     ██     ██▀▀██  ██  ▀█▄   ██  ▀█ ██ ",
			"   █  ▄   ██     ░█  ██  ██▄▄▄▄██░ ██   ▐▌██ ",
			"   ████   ██      █  ██   █    ██  ██     ██ ",
			"                                █           ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			"  █████▄▄▄█████ ░██  ██  ▄▄▄       ███▄    █ ",
			"  █   ▀░  ██  ░  ██  ██ ▒████▄     ██ ▀█   █ ",
			"  ███     ██     ██▀▀██ ░██  ▀█▄   ██  ▀█ ██ ",
			"   █  ▄   ██     ░█ ░██░ ██▄▄▄▄██░ ██   ▐▌██ ",
			"   ████   ██      █  ██   █    ██  ██    ░██ ",
			"                                █           ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			"  █████▄▄▄█████ ░██░ ██  ▄▄▄       ███▄    █ ",
			"  █   ▀░ ░██░ ░  ██  ██░▒████▄     ██ ▀█   █ ",
			"  ███     ██     ██▀▀██ ░██  ▀█▄   ██  ▀█ ██ ",
			"   █  ▄   ██     ▒█░░██░ ██▄▄▄▄██░ ██   ▐▌██ ",
			"   ████   ██     ░█  ██░  █   ░██  ██    ░██ ",
			"                                █           ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			"  █████▄▄▄█████░ ██░ ██  ▄▄▄       ███▄    █ ",
			"  █   ▀░  ██▒ ░░▒██░ ██░▒████▄     ██ ▀█   █ ",
			"  ███  ░ ▒██░    ██▀▀██ ░██  ▀█▄   ██░ ▀█ ██ ",
			"   █  ▄  ░██     ▒█ ░██  ██▄▄▄▄██  ██   ▐▌██ ",
			"   ████   ██     ░█▒░██▒  █   ░██░ ██    ░██ ",
			"    ░                ░    ░     █░        ░ ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			" ▒█████▄▄▄█████▒ ██░ ██  ▄▄▄       ███▄    █ ",
			"  █   ▀▒  ██▒ ▒░▒██░ ██░▒████▄     ██ ▀█   █ ",
			"  ███  ░ ▒██░ ░  ██▀▀██ ░██  ▀█▄  ░██  ▀█ ██ ",
			"   █  ▄░ ▒██░    ▒█ ░██ ░██▄▄▄▄██  ██░  ▐▌██ ",
			"   ████   ██     ░█▒░██▒  █   ▒██▒ ██    ▒██ ",
			"    ░                ░    ░   ░ █░        ░ ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			" ▒█████▄▄▄█████▒ ██░ ██  ▄▄▄       ███▄    █ ",
			" ░█   ▀▓  ██▒ ▒░▒██░ ██░▒████▄     ██ ▀█   █ ",
			"  ███  ▒ ▒██░ ░ ░██▀▀██░░██  ▀█▄  ░██  ▀█ ██░",
			"   █  ▄░ ░██▒   ░▒█ ░██ ░██▄▄▄▄██  ██▒  ▐▌██ ",
			"   ████  ░██▒    ░█▒░██▓ ░█   ▒██▒ ██░   ▒██ ",
			"    ▒      ░     ░   ░ ▒ ░░   ░ █░      ░ ▒ ",
			"                                             ",
			"                                             ",
			"                                             ",
		},
		{
			" ▓█████▄▄▄█████▓ ██░ ██  ▄▄▄       ███▄    █ ",
			" ▒█   ▀▓  ██▒ ▒░▒██░ ██▒▒████▄     ██ ▀█   █ ",
			" ░███  ▒ ▒██░ ▒░░██▀▀██░░██  ▀█▄  ▒██  ▀█ ██▒",
			"  ░█  ▄░ ▒██▓ ░ ░▓█ ░██ ░██▄▄▄▄██ ░██▒  ▐▌██ ",
			"   ████▒ ▒██▒   ░▒█▒░██▓ ▒█   ▒██▒░██░   ▒██ ",
			"    ░░   ░ ░     ▒ ░░░ ░ ░▒   ▒░█░  ░    ░ ▒ ",
			"                 ░  ░  ░      ░            ░ ",
			"                                             ",
			"                                             ",
		},
		{
			" ▓█████▄▄▄█████▓ ██░ ██  ▄▄▄       ███▄    █ ",
			" ▓█   ▀▓  ██▒ ▓▒▓██░ ██▒▒████▄     ██ ▀█   █ ",
			" ▒███  ▒ ▓██░ ▒░░██▀▀██░░██  ▀█▄  ▓██  ▀█ ██▒",
			" ░▒█  ▄░ ▓██▓ ░ ░▓█ ░██ ░██▄▄▄▄██ ▒██▒  ▐▌██░",
			"  ░████▒ ▒██▒ ░ ░▒█▒░██▓ ▓█   ▓██▒▒██░   ▓██░",
			"    ▒░   ░ ░     ▒ ░░▒░▒ ░▒   ▒░█░  ▒░   ░ ▒ ",
			"    ░            ░  ▒░ ░  ░   ░      ░   ░ ░ ",
			"                    ░     ░                  ",
			"                                             ",
		},
		{
			" ▓█████▄▄▄█████▓ ██░ ██  ▄▄▄       ███▄    █ ",
			" ▓█   ▀▓  ██▒ ▓▒▓██░ ██▒▒████▄     ██ ▀█   █ ",
			" ▒███  ▒ ▓██░ ▒░▒██▀▀██░▒██  ▀█▄  ▓██  ▀█ ██▒",
			" ▒▓█  ▄░ ▓██▓ ░ ░▓█ ░██ ░██▄▄▄▄██ ▓██▒  ▐▌██▒",
			"  ░████▒ ▒██▒ ░ ░▓█▒░██▓ ▓█   ▓██▒▒██░   ▓██░",
			"  ░ ▒░ ░ ░ ░     ▒ ░░▒░▒ ▒▒   ▓▒█░  ▒░   ░ ▒ ",
			"    ░  ░         ▒ ░▒░ ░  ▒   ▒▒ ░  ░░   ░ ▒░",
			"    ░            ░  ░░ ░  ░   ░      ░       ",
			"                    ░                        ",
		},
		{
			" ▓█████▄▄▄█████▓ ██░ ██  ▄▄▄       ███▄    █ ",
			" ▓█   ▀▓  ██▒ ▓▒▓██░ ██▒▒████▄     ██ ▀█   █ ",
			" ▒███  ▒ ▓██░ ▒░▒██▀▀██░▒██  ▀█▄  ▓██  ▀█ ██▒",
			" ▒▓█  ▄░ ▓██▓ ░ ░▓█ ░██ ░██▄▄▄▄██ ▓██▒  ▐▌██▒",
			" ░▒████▒ ▒██▒ ░ ░▓█▒░██▓ ▓█   ▓██▒▒██░   ▓██░",
			" ░░ ▒░ ░ ▒ ░░    ▒ ░░▒░▒ ▒▒   ▓▒█░░ ▒░   ▒ ▒ ",
			"  ░ ░  ░   ░     ▒ ░▒░ ░  ▒   ▒▒ ░  ░░   ░ ▒░",
			"    ░    ░       ░  ░░ ░  ░   ▒      ░   ░ ░ ",
			"    ░               ░  ░      ░              ",
		},
		{
			" ▓█████▄▄▄█████▓ ██░ ██  ▄▄▄       ███▄    █ ",
			" ▓█   ▀▓  ██▒ ▓▒▓██░ ██▒▒████▄     ██ ▀█   █ ",
			" ▒███  ▒ ▓██░ ▒░▒██▀▀██░▒██  ▀█▄  ▓██  ▀█ ██▒",
			" ▒▓█  ▄░ ▓██▓ ░ ░▓█ ░██ ░██▄▄▄▄██ ▓██▒  ▐▌██▒",
			" ░▒████▒ ▒██▒ ░ ░▓█▒░██▓ ▓█   ▓██▒▒██░   ▓██░",
			" ░░ ▒░ ░ ▒ ░░    ▒ ░░▒░▒ ▒▒   ▓▒█░░ ▒░   ▒ ▒ ",
			"  ░ ░  ░   ░     ▒ ░▒░ ░  ▒   ▒▒ ░░ ░░   ░ ▒░",
			"    ░    ░       ░  ░░ ░  ░   ▒      ░   ░ ░ ",
			"    ░  ░         ░  ░  ░      ░  ░         ░ ",
		},
    }

    local alpha_bufnr = nil
    local current = 1
    local total = #frames
    local delay_ms = 200   -- milliseconds between frames

    dashboard.section.header.val = frames[1]

    dashboard.section.buttons.val = {
      dashboard.button("e", "  New file", ":ene <BARstartinsert <CR>"),
      dashboard.button("f", "  Find file", ":FzfLua files<CR>"),
      dashboard.button("g", "  Ripgrep", ":FzfLua live_grep_native<CR>"),
      dashboard.button("r", "  Recent", ":FzfLua oldfiles<CR>"),
      dashboard.button("s", "  Settings", ":e $MYVIMRC | :cd %:p:h | split . | wincmd k | pwd<CR>"),
      dashboard.button("q", "  Quit NVIM", ":qa<CR>"),
    }

    alpha.setup(dashboard.opts)
    vim.cmd([[
      autocmd FileType alpha setlocal nofoldenable
    ]])

    alpha_bufnr = vim.fn.bufnr("%")
    
    local function animate_header()
        if
            alpha_bufnr
            and vim.api.nvim_buf_is_valid(alpha_bufnr)
            and next(vim.fn.getbufinfo{bufnr = alpha_bufnr, listed = 1}[1].windows)
            and current < total
        then
            current = (current >= total) and current or current + 1
            dashboard.section.header.val = frames[current]
            alpha.redraw()
            vim.defer_fn(animate_header, delay_ms)  
        end
    end
    vim.defer_fn(animate_header, delay_ms)
  end,
}

